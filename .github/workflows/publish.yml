name: Create and publish a Docker image to GitHub Container Registry & DockerHub

on:
  workflow_dispatch:
    inputs:
      caller:
        description: 'The invoker of the workflow'
        required: false
        default: ''
  push:
    branches: ['main']

env:
  DHUB_IMAGE_NAME: bfscloud/kaniko-gitlab
  GHCR_IMAGE_NAME: ghcr.io/bdwyertech/kaniko-gitlab

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - prefix: ''
    permissions:
      contents: read  # Read the repo contents.
      id-token: write # Produce identity token for keyless signing.
      packages: write
      security-events: write # For Scan results

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get short SHA
        id: short_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DHUB_IMAGE_NAME }}
            ${{ env.GHCR_IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.DHUB_IMAGE_NAME }}
          flavor: |
            latest=true
            prefix=${{ matrix.prefix }},onlatest=true
          tags: |
            type=sha,enable=true,priority=100,prefix=${{ matrix.prefix }}${{ steps.date.outputs.date }}--,suffix=,format=short

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: ANSIBLE=${{ matrix.ansible }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          provenance: true
          sbom: true
          
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.31.0
        with:
          image-ref: ${{ env.GHCR_IMAGE_NAME }}:${{ matrix.prefix }}${{ steps.date.outputs.date }}--${{ steps.short_sha.outputs.short_sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
